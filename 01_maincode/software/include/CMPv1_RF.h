//************************************************************
// Desciption: CMPv1 Register File Header File
//      Generated by genRF (Version 1.40) 02/24/2020 20:36:42
//************************************************************

#ifndef CMPV1_RF_H
#define CMPV1_RF_H

// Register 0x00
typedef union cmpv1_r00{
  struct{
    unsigned MBUS_R0		: 24;
  };
  uint32_t as_int;
} cmpv1_r00_t;
#define CMPv1_R00_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union cmpv1_r01{
  struct{
    unsigned MBUS_R1		: 24;
  };
  uint32_t as_int;
} cmpv1_r01_t;
#define CMPv1_R01_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union cmpv1_r02{
  struct{
    unsigned MBUS_R2		: 24;
  };
  uint32_t as_int;
} cmpv1_r02_t;
#define CMPv1_R02_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union cmpv1_r03{
  struct{
    unsigned MBUS_R3		: 24;
  };
  uint32_t as_int;
} cmpv1_r03_t;
#define CMPv1_R03_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union cmpv1_r04{
  struct{
    unsigned MBUS_R4		: 24;
  };
  uint32_t as_int;
} cmpv1_r04_t;
#define CMPv1_R04_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union cmpv1_r05{
  struct{
    unsigned MBUS_R5		: 24;
  };
  uint32_t as_int;
} cmpv1_r05_t;
#define CMPv1_R05_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union cmpv1_r06{
  struct{
    unsigned MBUS_R6		: 24;
  };
  uint32_t as_int;
} cmpv1_r06_t;
#define CMPv1_R06_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union cmpv1_r07{
  struct{
    unsigned MBUS_R7		: 24;
  };
  uint32_t as_int;
} cmpv1_r07_t;
#define CMPv1_R07_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union cmpv1_r08{
  struct{
    unsigned CHIP_ID		: 16;
  };
  uint32_t as_int;
} cmpv1_r08_t;
#define CMPv1_R08_DEFAULT {{0x0000}}
_Static_assert(sizeof(cmpv1_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union cmpv1_r09{
  struct{
    unsigned FLAGS		: 24;
  };
  uint32_t as_int;
} cmpv1_r09_t;
#define CMPv1_R09_DEFAULT {{0x000000}}
_Static_assert(sizeof(cmpv1_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union cmpv1_r0A{
  struct{
    unsigned OSC_DIV		: 3;
    unsigned NOT_DEFINED_10_3		: 1;
    unsigned OSC_SD		: 5;
    unsigned NOT_DEFINED_10_9		: 1;
    unsigned NOT_DEFINED_10_10		: 1;
    unsigned NOT_DEFINED_10_11		: 1;
    unsigned EXT_MEMCLKSEL		: 1;
  };
  uint32_t as_int;
} cmpv1_r0A_t;
#define CMPv1_R0A_DEFAULT {{0x2, 0x0, 0x1C, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(cmpv1_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union cmpv1_r0B{
  struct{
    unsigned ENABLE_SOFT_RESET		: 1;
  };
  uint32_t as_int;
} cmpv1_r0B_t;
#define CMPv1_R0B_DEFAULT {{0x0}}
_Static_assert(sizeof(cmpv1_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union cmpv1_r0C{
  struct{
    unsigned INSTR_PG_EN_ARRAY		: 1;
    unsigned IMGIF_PG_EN_ARRAY		: 1;
    unsigned H264_PG_EN_ARRAY		: 1;
    unsigned NE_PG_EN_ARRAY		: 1;
    unsigned NE_PG_EN_ARRAY_INST		: 1;
    unsigned NE_PG_EN_ARRAY_SHARED		: 6;
  };
  uint32_t as_int;
} cmpv1_r0C_t;
#define CMPv1_R0C_DEFAULT {{0x1, 0x1, 0x1, 0x1, 0x1, 0x3F}}
_Static_assert(sizeof(cmpv1_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
typedef union cmpv1_r0D{
  struct{
    unsigned INSTR_ISOL_1P2		: 1;
    unsigned IMGIF_ISOL_1P2		: 1;
    unsigned H264_ISOL_1P2		: 1;
    unsigned NE_ISOL_1P2		: 1;
    unsigned NE_ISOL_1P2_INST		: 1;
    unsigned NE_ISOL_1P2_SHARED		: 6;
  };
  uint32_t as_int;
} cmpv1_r0D_t;
#define CMPv1_R0D_DEFAULT {{0x1, 0x1, 0x1, 0x1, 0x1, 0x3F}}
_Static_assert(sizeof(cmpv1_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E
typedef union cmpv1_r0E{
  struct{
    unsigned INSTR_SD_PCH		: 5;
    unsigned INSTR_SD_ISOLEN		: 5;
    unsigned INSTR_SD_ISOLDIS		: 6;
    unsigned INSTR_SD_PGDIS		: 6;
  };
  uint32_t as_int;
} cmpv1_r0E_t;
#define CMPv1_R0E_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union cmpv1_r0F{
  struct{
    unsigned INSTR_SD_WWL		: 6;
    unsigned INSTR_SD_SAE		: 5;
    unsigned INSTR_SD_RWL_MORE		: 4;
    unsigned INSTR_SD_RWL		: 6;
  };
  uint32_t as_int;
} cmpv1_r0F_t;
#define CMPv1_R0F_DEFAULT {{0x0C, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
typedef union cmpv1_r10{
  struct{
    unsigned IMGIF_SD_PCH_128		: 5;
    unsigned IMGIF_SD_ISOLEN_128		: 5;
    unsigned IMGIF_SD_ISOLDIS_128		: 6;
    unsigned IMGIF_SD_PGDIS_128		: 6;
  };
  uint32_t as_int;
} cmpv1_r10_t;
#define CMPv1_R10_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union cmpv1_r11{
  struct{
    unsigned IMGIF_SD_WWL_128		: 6;
    unsigned IMGIF_SD_SAE_128		: 5;
    unsigned IMGIF_SD_RWL_MORE_128		: 4;
    unsigned IMGIF_SD_RWL_128		: 6;
  };
  uint32_t as_int;
} cmpv1_r11_t;
#define CMPv1_R11_DEFAULT {{0x1F, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union cmpv1_r12{
  struct{
    unsigned IMGIF_SD_PCH_64		: 5;
    unsigned IMGIF_SD_ISOLEN_64		: 5;
    unsigned IMGIF_SD_ISOLDIS_64		: 6;
    unsigned IMGIF_SD_PGDIS_64		: 6;
  };
  uint32_t as_int;
} cmpv1_r12_t;
#define CMPv1_R12_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r12_t) == 4, "Punned Structure Size");

// Register 0x13
typedef union cmpv1_r13{
  struct{
    unsigned IMGIF_SD_WWL_64		: 6;
    unsigned IMGIF_SD_SAE_64		: 5;
    unsigned IMGIF_SD_RWL_MORE_64		: 4;
    unsigned IMGIF_SD_RWL_64		: 6;
  };
  uint32_t as_int;
} cmpv1_r13_t;
#define CMPv1_R13_DEFAULT {{0x1F, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union cmpv1_r14{
  struct{
    unsigned NE_SD_PCH_128		: 5;
    unsigned NE_SD_ISOLEN_128		: 5;
    unsigned NE_SD_ISOLDIS_128		: 6;
    unsigned NE_SD_PGDIS_128		: 6;
  };
  uint32_t as_int;
} cmpv1_r14_t;
#define CMPv1_R14_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union cmpv1_r15{
  struct{
    unsigned NE_SD_WWL_128		: 6;
    unsigned NE_SD_SAE_128		: 5;
    unsigned NE_SD_RWL_MORE_128		: 4;
    unsigned NE_SD_RWL_128		: 6;
  };
  uint32_t as_int;
} cmpv1_r15_t;
#define CMPv1_R15_DEFAULT {{0x1F, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r15_t) == 4, "Punned Structure Size");

// Register 0x16
typedef union cmpv1_r16{
  struct{
    unsigned LC_SLEEP_MID_TIMER		: 2;
    unsigned NOT_DEFINED_22_2		: 1;
    unsigned NOT_DEFINED_22_3		: 1;
    unsigned LC_SLEEP_TIMER		: 2;
  };
  uint32_t as_int;
} cmpv1_r16_t;
#define CMPv1_R16_DEFAULT {{0x3, 0x0, 0x0, 0x3}}
_Static_assert(sizeof(cmpv1_r16_t) == 4, "Punned Structure Size");

// Register 0x17
typedef union cmpv1_r17{
  struct{
    unsigned SMALL_HEADER_S_ENB		: 1;
    unsigned SMALL_HEADER_M_ENB		: 1;
    unsigned SMALL_HEADER_L_ENB		: 1;
    unsigned NOT_DEFINED_23_3		: 1;
    unsigned MID_HEADER_S_ENB		: 1;
    unsigned MID_HEADER_M_ENB		: 1;
    unsigned MID_HEADER_L_ENB		: 1;
  };
  uint32_t as_int;
} cmpv1_r17_t;
#define CMPv1_R17_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(cmpv1_r17_t) == 4, "Punned Structure Size");

// Register 0x18
typedef union cmpv1_r18{
  struct{
    unsigned NE_SD_PCH_256		: 5;
    unsigned NE_SD_ISOLEN_256		: 5;
    unsigned NE_SD_ISOLDIS_256		: 6;
    unsigned NE_SD_PGDIS_256		: 6;
  };
  uint32_t as_int;
} cmpv1_r18_t;
#define CMPv1_R18_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r18_t) == 4, "Punned Structure Size");

// Register 0x19
typedef union cmpv1_r19{
  struct{
    unsigned NE_SD_WWL_256		: 6;
    unsigned NE_SD_SAE_256		: 5;
    unsigned NE_SD_RWL_MORE_256		: 4;
    unsigned NE_SD_RWL_256		: 6;
  };
  uint32_t as_int;
} cmpv1_r19_t;
#define CMPv1_R19_DEFAULT {{0x1F, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r19_t) == 4, "Punned Structure Size");

// Register 0x1A
typedef union cmpv1_r1A{
  struct{
    unsigned NE_SD_PCH_32		: 5;
    unsigned NE_SD_ISOLEN_32		: 5;
    unsigned NE_SD_ISOLDIS_32		: 6;
    unsigned NE_SD_PGDIS_32		: 6;
  };
  uint32_t as_int;
} cmpv1_r1A_t;
#define CMPv1_R1A_DEFAULT {{0x0A, 0x0F, 0x3F, 0x3F}}
_Static_assert(sizeof(cmpv1_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B
typedef union cmpv1_r1B{
  struct{
    unsigned NE_SD_WWL_32		: 6;
    unsigned NE_SD_SAE_32		: 5;
    unsigned NE_SD_RWL_MORE_32		: 4;
    unsigned NE_SD_RWL_32		: 6;
  };
  uint32_t as_int;
} cmpv1_r1B_t;
#define CMPv1_R1B_DEFAULT {{0x1F, 0x0A, 0x0, 0x3D}}
_Static_assert(sizeof(cmpv1_r1B_t) == 4, "Punned Structure Size");

// Register 0x1C
// -- EMPTY --

// Register 0x1D
// -- EMPTY --

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
typedef union cmpv1_r20{
  struct{
    unsigned RUN_CPU		: 1;
  };
  uint32_t as_int;
} cmpv1_r20_t;
#define CMPv1_R20_DEFAULT {{0x0}}
_Static_assert(sizeof(cmpv1_r20_t) == 4, "Punned Structure Size");

// Register 0x21
// -- EMPTY --

// Register 0x22
// -- EMPTY --

// Register 0x23
// -- EMPTY --

// Register 0x24
// -- EMPTY --

// Register 0x25
// -- EMPTY --

// Register 0x26
// -- EMPTY --

// Register 0x27
// -- EMPTY --

// Register 0x28
// -- EMPTY --

// Register 0x29
typedef union cmpv1_r29{
  struct{
    unsigned STR_WR_CH1_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH1_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} cmpv1_r29_t;
#define CMPv1_R29_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(cmpv1_r29_t) == 4, "Punned Structure Size");

// Register 0x2A
typedef union cmpv1_r2A{
  struct{
    unsigned STR_WR_CH1_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH1_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} cmpv1_r2A_t;
#define CMPv1_R2A_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(cmpv1_r2A_t) == 4, "Punned Structure Size");

// Register 0x2B
typedef union cmpv1_r2B{
  struct{
    unsigned STR_WR_CH1_BUF_LEN		: 20;
    unsigned NOT_DEFINED_43_20		: 1;
    unsigned STR_WR_CH1_DBLB		: 1;
    unsigned STR_WR_CH1_WRP		: 1;
    unsigned STR_WR_CH1_EN		: 1;
  };
  uint32_t as_int;
} cmpv1_r2B_t;
#define CMPv1_R2B_DEFAULT {{0x007FF, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(cmpv1_r2B_t) == 4, "Punned Structure Size");

// Register 0x2C
typedef union cmpv1_r2C{
  struct{
    unsigned STR_WR_CH1_BUF_OFF		: 20;
  };
  uint32_t as_int;
} cmpv1_r2C_t;
#define CMPv1_R2C_DEFAULT {{0x00000}}
_Static_assert(sizeof(cmpv1_r2C_t) == 4, "Punned Structure Size");

// Register 0x2D
typedef union cmpv1_r2D{
  struct{
    unsigned STR_WR_CH0_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH0_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} cmpv1_r2D_t;
#define CMPv1_R2D_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(cmpv1_r2D_t) == 4, "Punned Structure Size");

// Register 0x2E
typedef union cmpv1_r2E{
  struct{
    unsigned STR_WR_CH0_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH0_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} cmpv1_r2E_t;
#define CMPv1_R2E_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(cmpv1_r2E_t) == 4, "Punned Structure Size");

// Register 0x2F
typedef union cmpv1_r2F{
  struct{
    unsigned STR_WR_CH0_BUF_LEN		: 20;
    unsigned NOT_DEFINED_47_20		: 1;
    unsigned STR_WR_CH0_DBLB		: 1;
    unsigned STR_WR_CH0_WRP		: 1;
    unsigned STR_WR_CH0_EN		: 1;
  };
  uint32_t as_int;
} cmpv1_r2F_t;
#define CMPv1_R2F_DEFAULT {{0x007FF, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(cmpv1_r2F_t) == 4, "Punned Structure Size");

// Register 0x30
typedef union cmpv1_r30{
  struct{
    unsigned STR_WR_CH0_BUF_OFF		: 20;
  };
  uint32_t as_int;
} cmpv1_r30_t;
#define CMPv1_R30_DEFAULT {{0x00000}}
_Static_assert(sizeof(cmpv1_r30_t) == 4, "Punned Structure Size");

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
typedef union cmpv1_r33{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    unsigned NOT_DEFINED_51_20		: 1;
    unsigned NOT_DEFINED_51_21		: 1;
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} cmpv1_r33_t;
#define CMPv1_R33_DEFAULT {{0x00000, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(cmpv1_r33_t) == 4, "Punned Structure Size");

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
typedef union cmpv1_r3F{
  struct{
    unsigned DBGPIN_SEL0		: 3;
    unsigned NOT_DEFINED_63_3		: 1;
    unsigned DBGPIN_SEL1		: 3;
  };
  uint32_t as_int;
} cmpv1_r3F_t;
#define CMPv1_R3F_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(cmpv1_r3F_t) == 4, "Punned Structure Size");

// Register 0x40
typedef union cmpv1_r40{
  struct{
    unsigned NOT_DEFINED_64_0		: 1;
    unsigned NOT_DEFINED_64_1		: 1;
    unsigned NOT_DEFINED_64_2		: 1;
    unsigned NOT_DEFINED_64_3		: 1;
    unsigned NOT_DEFINED_64_4		: 1;
    unsigned NOT_DEFINED_64_5		: 1;
    unsigned NOT_DEFINED_64_6		: 1;
    unsigned NOT_DEFINED_64_7		: 1;
    unsigned NOT_DEFINED_64_8		: 1;
    unsigned NOT_DEFINED_64_9		: 1;
    unsigned NOT_DEFINED_64_10		: 1;
    unsigned NOT_DEFINED_64_11		: 1;
    unsigned NOT_DEFINED_64_12		: 1;
    unsigned NOT_DEFINED_64_13		: 1;
    unsigned NOT_DEFINED_64_14		: 1;
    unsigned NOT_DEFINED_64_15		: 1;
    unsigned NOT_DEFINED_64_16		: 1;
    unsigned NOT_DEFINED_64_17		: 1;
    unsigned NOT_DEFINED_64_18		: 1;
    unsigned NOT_DEFINED_64_19		: 1;
    unsigned NOT_DEFINED_64_20		: 1;
    unsigned NOT_DEFINED_64_21		: 1;
    unsigned NOT_DEFINED_64_22		: 1;
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} cmpv1_r40_t;
#define CMPv1_R40_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(cmpv1_r40_t) == 4, "Punned Structure Size");

#endif // CMPV1_RF_H